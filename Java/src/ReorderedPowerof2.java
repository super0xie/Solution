
public class ReorderedPowerof2 {
    
    private static int[] n = {1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768, 65536, 131072, 262144, 524288, 1048576, 2097152, 4194304, 8388608, 16777216, 33554432, 67108864, 134217728, 268435456, 536870912, 1073741824};
    private static int[] len = {1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 6, 6, 6, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10};
    private static int[][] count = {{0, 1, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 1, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 1, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 1, 0}, {0, 1, 0, 0, 0, 0, 1, 0, 0, 0}, {0, 0, 1, 1, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 1, 0, 1, 0, 0, 0}, {0, 1, 1, 0, 0, 0, 0, 0, 1, 0}, {0, 0, 1, 0, 0, 1, 1, 0, 0, 0}, {0, 1, 1, 0, 0, 1, 0, 0, 0, 0}, {1, 1, 1, 0, 1, 0, 0, 0, 0, 0}, {1, 0, 1, 0, 1, 0, 0, 0, 1, 0}, {1, 0, 0, 0, 1, 0, 1, 0, 0, 1}, {0, 1, 1, 0, 0, 0, 0, 0, 1, 1}, {0, 1, 0, 1, 1, 0, 1, 0, 1, 0}, {0, 0, 1, 1, 0, 0, 1, 1, 1, 0}, {0, 0, 0, 1, 0, 2, 2, 0, 0, 0}, {1, 2, 1, 1, 0, 0, 0, 1, 0, 0}, {0, 1, 2, 0, 2, 0, 1, 0, 0, 0}, {0, 0, 2, 0, 1, 1, 0, 0, 2, 0}, {1, 1, 0, 0, 1, 1, 1, 1, 1, 0}, {1, 1, 2, 0, 0, 1, 0, 1, 0, 1}, {1, 1, 0, 1, 3, 0, 0, 0, 0, 1}, {1, 0, 0, 1, 0, 0, 1, 0, 4, 0}, {0, 2, 1, 0, 0, 0, 2, 3, 0, 0}, {0, 0, 1, 3, 2, 2, 0, 0, 0, 0}, {1, 1, 0, 0, 1, 0, 2, 1, 2, 0}, {0, 2, 2, 1, 1, 0, 0, 2, 1, 0}, {0, 0, 1, 1, 2, 2, 2, 0, 1, 0}, {1, 1, 1, 1, 0, 1, 1, 1, 1, 1}, {1, 2, 1, 1, 2, 0, 0, 2, 1, 0}};
    
    public boolean reorderedPowerOf2(int N) {
        int[] c = new int[10];
        int length = 0;
        while(N > 0) {
            int d = (int) (N % 10);
            c[d]++;
            N = N / 10;
            length++;
        }
        
        for(int i = 0; i < 31; i++) {
            if(length != len[i]) continue;
            int j = 0;
            for(; j < 10; j++) {
                if(count[i][j] != c[j]) break;
            }
            if(j == 10) return true;
        }
        return false;
    }
    
    public static void main(String[] args) {
        int[] n = new int [31];
        n[0] = 1;
        for(int i = 1; i < n.length; i++) {
            n[i] = n[i-1] * 2;
        }
        
        int[][] count = new int[31][10];
        for(int i = 0; i < count.length; i++) {
            int num = n[i];
            while(num > 0) {
                int d = num % 10;
                count[i][d]++;
                num = num / 10;
            }
        }
        
        for(int i = 0; i < count.length; i++) {
            System.out.print("{");
            for(int j = 0; j < 10; j++) {
                System.out.print(count[i][j]);
                if(j != 9) System.out.print(", ");
            }
            
            System.out.print("}, ");
        }
        
        
    }

}
